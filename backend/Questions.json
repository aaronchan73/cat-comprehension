[
    {
        "id": 1,
        "name": "Two Sum",
        "code": "from typing import List\n\ndef twoSum(nums: List[int], target: int) -> List[int]:\n    numToIndex = {}\n    for index, num in enumerate(nums):\n        complement = target - num\n        if complement in numToIndex:\n            return [numToIndex[complement], index]\n        numToIndex[num] = index\n    return []\n\n# Example usage:\nnums = [2, 7, 11, 15]\ntarget = 9\nresult = twoSum(nums, target)\nprint(result)  # Output: [0, 1]\n"
    },
    {
        "id": 2,
        "name": "Sum Function",
        "code": "function add(a, b) { return a + b; }"
    },
    {
        "id": 3,
        "name": "Max of Array",
        "code": "function findMax(nums) {\n    let max = nums[0];\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] > max) {\n            max = nums[i];\n        }\n    }\n    return max;\n}\n\n// Example usage:\nconst nums = [1, 3, 5, 2, 4];\nconst max = findMax(nums);\nconsole.log(max);  // Output: 5\n"
    },
    {
        "id": 4,
        "name": "Multiply and Compare",
        "code": "function multiplyAndCompare(a, b, c) {\n    return (a * b) > c;\n}\n\n// Example usage:\nconst result = multiplyAndCompare(2, 3, 5);\nconsole.log(result);  // Output: true\n"
    },
    {
        "id": 5,
        "name": "Valid Parentheses",
        "code": "function isValid(s) {\n    const stack = [];\n    const map = {\n        '(': ')',\n        '{': '}',\n        '[': ']'\n    };\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] in map) {\n            stack.push(s[i]);\n        } else {\n            const last = stack.pop();\n            if (map[last] !== s[i]) {\n                return false;\n            }\n        }\n    }\n    return stack.length === 0;\n}\n\n// Example usage:\nconst s = \"{[()]}\";\nconst valid = isValid(s);\nconsole.log(valid);  // Output: true\n"
    },
    {
        "id": 6,
        "name": "Best Time to Buy and Sell Stock",
        "code": "function maxProfit(prices) {\n    let minPrice = Infinity;\n    let maxProfit = 0;\n    for (let price of prices) {\n        if (price < minPrice) {\n            minPrice = price;\n        } else if (price - minPrice > maxProfit) {\n            maxProfit = price - minPrice;\n        }\n    }\n    return maxProfit;\n}\n\n// Example usage:\nconst prices = [7, 1, 5, 3, 6, 4];\nconst profit = maxProfit(prices);\nconsole.log(profit);  // Output: 5\n"
    },
    {
        "id": 7,
        "name": "Valid Palindrome",
        "code": "function isPalindrome(s) {\n    const cleanStr = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    const reversedStr = cleanStr.split('').reverse().join('');\n    return cleanStr === reversedStr;\n}\n\n// Example usage:\nconst s = \"A man, a plan, a canal: Panama\";\nconst valid = isPalindrome(s);\nconsole.log(valid);  // Output: true\n"
    },
    {
        "id": 8,
        "name": "Majority Element",
        "code": "function majorityElement(nums) {\n    const count = {};\n    const majorityCount = Math.floor(nums.length / 2);\n    for (let num of nums) {\n        count[num] = (count[num] || 0) + 1;\n        if (count[num] > majorityCount) {\n            return num;\n        }\n    }\n}\n\n// Example usage:\nconst nums = [3, 2, 3];\nconst majority = majorityElement(nums);\nconsole.log(majority);  // Output: 3\n"
    }

]